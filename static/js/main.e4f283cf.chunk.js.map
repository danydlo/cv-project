{"version":3,"sources":["components/Header.js","utils/inputUtils.js","components/InputField.js","components/ChangeMode.js","components/ContactInfo.js","components/EducationInfo.js","components/WorkInfo.js","components/SkillsInfo.js","fonts/Roboto-Regular.ttf","fonts/Roboto-Bold.ttf","utils/pdfUtils.js","components/PDF.js","data/data.js","utils/bodyUtils.js","components/Body.js","App.js","index.js"],"names":["Header","className","inputType","name","makePlaceHolder","containerClass","InputField","value","section","handleChange","index","label","toUpperCase","slice","onChange","e","target","checked","onKeyPress","key","preventDefault","placeholder","type","readOnly","ChangeMode","back","next","changeMode","onClick","ContactInfo","contact","inputs","Object","entries","map","input","EducationInfo","addEducation","deleteEducation","education","addButton","element","WorkInfo","addWork","deleteWork","work","SkillsInfo","addSkill","deleteSkill","skills","skillsInputs","Font","register","family","fonts","src","Roboto","RobotoBold","fontStyle","color","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","fontSize","fontFamily","position","top","right","contactText","alignSelf","width","sectionContainer","sectionText","sectionTextBullets","sectionTextBold","skillsText","sectionTextBoldBig","flexContainer","display","flexDirection","alignItems","flexContainerWrap","justifyContent","flexWrap","formatDate","start","end","startArr","split","endArr","isEmpty","object","empty","forEach","values","formatSkills","cols","push","skill","style","col","text","PDF","address","city","state","zip","phone","email","website","el","degree","program","university","title","company","bullets","formatValue","concat","line","join","Body","useState","mode","setMode","setSection","sectionName","newSection","prevState","addItem","deleteItem","oldSection","newMode","height","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4f283cf.chunk.js","sourcesContent":["import '../styles/Header.css'\n\nfunction Header() {\n  return (\n    <nav className=\"header\">\n      <h1 className=\"title\">Make your Resume</h1>\n    </nav>\n  )\n}\n\nexport default Header\n","export function inputType(name) {\n  return name === 'email' ? 'email' : name === 'zip' ? 'number' : name === 'start' || name === 'end' ? 'date' : 'text'\n}\n\nexport function makePlaceHolder(name) {\n  switch (name) {\n    case 'name':\n      return 'John Doe'\n    case 'address':\n      return '123 Sesame Street'\n    case 'city':\n      return 'Brownsville'\n    case 'state':\n      return 'TX'\n    case 'zip':\n      return '12345'\n    case 'email':\n      return 'johndoe@gmail.com'\n    case 'phone':\n      return '123-456-7890'\n    case 'website':\n      return 'somesite.com'\n    case 'degree':\n      return 'Computer Engineering'\n    case 'program':\n      return 'Engineering'\n    case 'university':\n      return 'UTRGV'\n    case 'title':\n      return 'CEO'\n    case 'company':\n      return 'Google'\n    case 'bullets':\n      return 'Summarize your experience and responsabilities in bullets.'\n    case 'skill':\n      return 'Amazing skill'\n    default:\n      return null\n  }\n}\n\nexport function containerClass(name) {\n  if (name === 'university' || name === 'name' || name === 'address' || name === 'bullets') {\n    return 'input-container two-cols'\n  } else {\n    return 'input-container'\n  }\n}\n","import { inputType, makePlaceHolder, containerClass } from '../utils/inputUtils'\nimport '../styles/InputField.css'\n\nfunction InputField({ value, name, section, handleChange, index }) {\n  let input = null\n  const label = name === 'skill' ? '' : name[0].toUpperCase() + name.slice(1)\n\n  const onChange = e => {\n    const { name, value, checked } = e.target\n    if (name === 'end' && checked) handleChange(section, name, 'present', index)\n    else handleChange(section, name, value, index)\n  }\n\n  const onKeyPress = e => {\n    const { name, value } = e.target\n    if (e.key === 'Enter') e.preventDefault()\n    handleChange(section, name, value, index, e.key)\n  }\n\n  if (name === 'bullets') {\n    input = (\n      <div className={containerClass(name)}>\n        <label className=\"input-label\">{label}</label>\n        <textarea\n          className=\"input-textarea\"\n          value={value}\n          name={name}\n          onKeyPress={onKeyPress}\n          onChange={onChange}\n          placeholder={makePlaceHolder(name)}\n        />\n      </div>\n    )\n  } else if (name === 'end') {\n    input = (\n      <div className={containerClass(name)}>\n        <div className=\"end-div\">\n          <label className=\"input-label\">{label}</label>\n          <div>\n            <input type=\"checkbox\" name=\"end\" onChange={onChange} />\n            <label className=\"input-label\">Present</label>\n          </div>\n        </div>\n        <input\n          className=\"input-box\"\n          type={value === 'present' ? 'text' : inputType(name)}\n          readOnly={value === 'present' ? true : false}\n          value={value === 'on' ? '' : value}\n          name={name}\n          onChange={onChange}\n          placeholder={makePlaceHolder(name)}\n        />\n      </div>\n    )\n  } else {\n    input = (\n      <div className={containerClass(name)}>\n        <label className=\"input-label\">{label}</label>\n        <input\n          className=\"input-box\"\n          type={inputType(name)}\n          value={value}\n          name={name}\n          onChange={onChange}\n          placeholder={makePlaceHolder(name)}\n        />\n      </div>\n    )\n  }\n\n  return input\n}\n\nexport default InputField\n","function ChangeMode({ back, next, changeMode }) {\n  return (\n    <div className=\"buttons\">\n      <button className=\"button\" onClick={() => changeMode(back)}>\n        {back}\n      </button>\n      <button className=\"button\" onClick={() => changeMode(next)}>\n        {next}\n      </button>\n    </div>\n  )\n}\n\nexport default ChangeMode\n","import InputField from './InputField'\nimport ChangeMode from './ChangeMode'\n\nfunction ContactInfo({ changeMode, handleChange, contact }) {\n  const contactEntries = Object.entries(contact)\n  const inputs = contactEntries.map(input => (\n    <InputField section=\"contact\" value={input[1]} name={input[0]} handleChange={handleChange} key={input[0]} />\n  ))\n\n  return (\n    <div>\n      <div className=\"section-container\">{inputs}</div>\n      <ChangeMode back=\"Start\" next=\"Education\" changeMode={changeMode} />\n    </div>\n  )\n}\n\nexport default ContactInfo\n","import InputField from './InputField'\nimport ChangeMode from './ChangeMode'\nimport '../styles/Sections.css'\n\nfunction EducationInfo({ addEducation, deleteEducation, handleChange, education, changeMode }) {\n  const educationInputs = education.map((element, index) => {\n    const education = Object.entries(element)\n    return education.map(input => (\n      <InputField\n        section=\"education\"\n        index={index}\n        value={input[1]}\n        name={input[0]}\n        handleChange={handleChange}\n        key={index + input[0]}\n      />\n    ))\n  })\n\n  const addButton = educationInputs.map((element, index) => {\n    if (index === 0) {\n      return (\n        <div className=\"extradiv two-cols\" key={'education' + index}>\n          {element}\n        </div>\n      )\n    } else\n      return (\n        <div className=\"extradiv two-cols\" key={'education' + index}>\n          <button className=\"btn delete-btn two-cols\" onClick={() => deleteEducation('education', index)}>\n            <span className=\"material-icons\">clear</span>\n          </button>\n          {element}\n        </div>\n      )\n  })\n\n  return (\n    <div>\n      <div className=\"section-container\">\n        {addButton}\n        <button className=\"btn add-btn two-cols\" onClick={() => addEducation('education')}>\n          <span className=\"material-icons\">add</span>\n        </button>\n      </div>\n      <ChangeMode back=\"Contact\" next=\"Work\" changeMode={changeMode} />\n    </div>\n  )\n}\n\nexport default EducationInfo\n","import InputField from './InputField'\nimport ChangeMode from './ChangeMode'\nimport '../styles/Sections.css'\n\nfunction WorkInfo({ addWork, deleteWork, handleChange, work, changeMode }) {\n  const workInputs = work.map((element, index) => {\n    const work = Object.entries(element)\n    return work.map(input => (\n      <InputField\n        section=\"work\"\n        index={index}\n        value={input[1]}\n        name={input[0]}\n        handleChange={handleChange}\n        key={index + input[0]}\n      />\n    ))\n  })\n\n  const addButton = workInputs.map((element, index) => {\n    if (index === 0) {\n      return (\n        <div className=\"extradiv two-cols\" key={'work' + index}>\n          {element}\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"extradiv two-cols\" key={'work' + index}>\n          <button className=\"btn delete-btn two-cols\" onClick={() => deleteWork('work', index)}>\n            <span className=\"material-icons\">clear</span>\n          </button>\n          {element}\n        </div>\n      )\n    }\n  })\n\n  return (\n    <div>\n      <div className=\"section-container\">\n        {addButton}\n        <button className=\"btn add-btn two-cols\" onClick={() => addWork('work')}>\n          <span className=\"material-icons\">add</span>\n        </button>\n      </div>\n      <ChangeMode back=\"Education\" next=\"Skills\" changeMode={changeMode} />\n    </div>\n  )\n}\n\nexport default WorkInfo\n","import InputField from './InputField'\nimport ChangeMode from './ChangeMode'\nimport '../styles/Sections.css'\n\nfunction SkillsInfo({ addSkill, deleteSkill, handleChange, skills, changeMode }) {\n  const skillsInputs = skills.map((element, index) => (\n    <div className=\"skills-div\" key={index}>\n      <InputField section=\"skills\" index={index} value={element} name=\"skill\" handleChange={handleChange} />\n      <button className=\"btn delete-btn\" onClick={() => deleteSkill('skills', index)}>\n        <span className=\"material-icons\">clear</span>\n      </button>\n    </div>\n  ))\n\n  return (\n    <div>\n      <div className=\"section-container\">\n        {skillsInputs}\n        <button className=\"btn add-btn skills-btn two-cols\" onClick={() => addSkill('skills')}>\n          Add Skill\n        </button>\n      </div>\n      <ChangeMode back=\"Work\" next=\"Preview\" changeMode={changeMode} />\n    </div>\n  )\n}\n\nexport default SkillsInfo\n","export default __webpack_public_path__ + \"static/media/Roboto-Regular.03523cf5.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Bold.4f39c579.ttf\";","import { Text, View, StyleSheet, Font } from '@react-pdf/renderer'\nimport Roboto from '../fonts/Roboto-Regular.ttf'\nimport RobotoBold from '../fonts/Roboto-Bold.ttf'\n\nFont.register({ family: 'Roboto', fonts: [{ src: Roboto }, { src: RobotoBold, fontStyle: 'bold' }] })\n\nconst color = '3d3d3d'\nexport const styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 35,\n    paddingHorizontal: 35\n  },\n  name: {\n    fontSize: 25,\n    fontFamily: 'Roboto',\n    color: 'darkblue'\n  },\n  contact: {\n    position: 'absolute',\n    top: 35,\n    right: 35\n  },\n  contactText: {\n    fontFamily: 'Roboto',\n    alignSelf: 'flex-end',\n    fontSize: 12,\n    color,\n    paddingBottom: 1\n  },\n  education: {\n    fontFamily: 'Roboto',\n    paddingTop: 60,\n    fontSize: 16,\n    color: 'darkblue'\n  },\n  work: {\n    fontFamily: 'Roboto',\n    paddingTop: 15,\n    fontSize: 16,\n    color: 'darkblue'\n  },\n  skills: {\n    fontFamily: 'Roboto',\n    paddingTop: 15,\n    fontSize: 16,\n    color: 'darkblue',\n    width: '100%'\n  },\n  sectionContainer: {\n    paddingTop: 5,\n    color\n  },\n  sectionText: {\n    color,\n    fontFamily: 'Roboto',\n    fontSize: 12,\n    paddingBottom: 1\n  },\n  sectionTextBullets: {\n    paddingTop: 5,\n    fontSize: 12,\n    fontFamily: 'Roboto'\n  },\n  sectionTextBold: {\n    fontFamily: 'Roboto',\n    fontSize: 12,\n    fontStyle: 'bold',\n    paddingBottom: 1\n  },\n  skillsText: {\n    fontFamily: 'Roboto',\n    fontSize: 12,\n    color,\n    paddingTop: 5\n  },\n  sectionTextBoldBig: {\n    fontFamily: 'Roboto',\n    fontSize: 14,\n    fontStyle: 'bold',\n    paddingBottom: 1\n  },\n  flexContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  flexContainerWrap: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n})\n\nexport function formatDate(start, end) {\n  const startArr = start.split('-')\n\n  if (end !== 'present') {\n    const endArr = end.split('-')\n    return `${startArr[1]}/${startArr[0]} - ${endArr[1]}/ ${endArr[0]}`\n  } else return `${startArr[1]}/${startArr[0]} - Present`\n}\n\nexport function formatWork(title, company) {\n  return `${title} - ${company}  `\n}\n\nexport function isEmpty(object, skills = false) {\n  let empty = true\n  if (skills) {\n    object.forEach(value => {\n      if (value !== '') empty = false\n    })\n  } else {\n    const values = Object.values(object)\n    values.forEach(value => {\n      if (value !== '' && value !== '\\u2022 ') empty = false\n    })\n  }\n\n  return empty\n}\n\nexport function formatSkills(skills) {\n  let cols = []\n  cols.push([])\n  cols.push([])\n  cols.push([])\n\n  skills.forEach((skill, index) => {\n    if ((index + 3) % 3 === 0) cols[0].push(skill)\n    else if ((index + 3) % 3 === 1) cols[1].push(skill)\n    else cols[2].push(skill)\n  })\n\n  const views = (\n    <View style={styles.flexContainerWrap}>\n      {cols.map((col, index) => (\n        <View style={{ display: 'table-column' }} key={'col' + index}>\n          {col.map((text, index) => (\n            <Text style={styles.skillsText} key={'text' + index}>\n              {text}\n            </Text>\n          ))}\n        </View>\n      ))}\n    </View>\n  )\n\n  return views\n}\n","import { Page, Text, View, Document } from '@react-pdf/renderer'\nimport { formatDate, formatWork, formatSkills, isEmpty, styles } from '../utils/pdfUtils'\n\nfunction PDF({ contact, education, work, skills }) {\n  return (\n    <Document>\n      <Page style={styles.body}>\n        <Text style={styles.name}>{contact.name}</Text>\n        <View style={styles.contact}>\n          <Text style={styles.contactText}>{contact.address}</Text>\n          <Text style={styles.contactText}>{`${contact.city}, ${contact.state} ${contact.zip}`}</Text>\n          <Text style={styles.contactText}>{contact.phone}</Text>\n          <Text style={styles.contactText}>{contact.email}</Text>\n          <Text style={styles.contactText}>{contact.website}</Text>\n        </View>\n        {isEmpty(education[0]) ? (\n          <Text />\n        ) : (\n          <View style={styles.education}>\n            <Text>Education</Text>\n            <View style={styles.flexContainerWrap}>\n              {education.map((el, index) => (\n                <View style={styles.sectionContainer} key={'education' + index}>\n                  <Text style={styles.sectionText}>{el.degree}</Text>\n                  <Text style={styles.sectionTextBold}>{el.program}</Text>\n                  <Text style={styles.sectionText}>{el.university}</Text>\n                  <Text style={styles.sectionText}>{formatDate(el.start, el.end)}</Text>\n                </View>\n              ))}\n            </View>\n          </View>\n        )}\n        {isEmpty(work[0]) ? (\n          <Text />\n        ) : (\n          <View style={styles.work}>\n            <Text>Work</Text>\n            {work.map((el, index) => (\n              <View style={styles.sectionContainer} key={'work' + index}>\n                <View style={styles.flexContainer}>\n                  <Text style={styles.sectionTextBoldBig}>{formatWork(el.title, el.company)}</Text>\n                  <Text style={styles.sectionText}>{formatDate(el.start, el.end)}</Text>\n                </View>\n                <Text style={styles.sectionTextBullets}>{el.bullets}</Text>\n              </View>\n            ))}\n          </View>\n        )}\n        {isEmpty(skills, true) ? (\n          <Text />\n        ) : (\n          <View style={styles.skills}>\n            <Text>Skills</Text>\n            {formatSkills(skills)}\n          </View>\n        )}\n      </Page>\n    </Document>\n  )\n}\n\nexport default PDF\n","export const contact = {\n  name: '',\n  address: '',\n  city: '',\n  state: '',\n  zip: '',\n  email: '',\n  phone: '',\n  website: ''\n}\nexport const education = [\n  {\n    degree: '',\n    program: '',\n    university: '',\n    start: '',\n    end: ''\n  }\n]\nexport const work = [\n  {\n    title: '',\n    company: '',\n    start: '',\n    end: '',\n    bullets: '\\u2022 '\n  }\n]\nexport const skills = ['', '', '', '']\n","export function formatValue(value) {\n  const bullet = '\\u2022'\n  const lines = value.split('\\n').concat('')\n\n  const bullets = lines.map(line => {\n    if (line[0] !== bullet) return `${bullet} ${line}`\n    else return line\n  })\n\n  return bullets.join('\\n')\n}\n","import React, { Component, useState } from 'react'\nimport { PDFViewer } from '@react-pdf/renderer'\n//components\nimport ContactInfo from './ContactInfo'\nimport EducationInfo from './EducationInfo'\nimport WorkInfo from './WorkInfo'\nimport SkillsInfo from './SkillsInfo'\nimport PDF from './PDF'\n//data and assets\nimport { contact, education, work, skills } from '../data/data'\nimport { formatValue } from '../utils/bodyUtils'\nimport '../styles/Body.css'\n\nfunction Body() {\n  const [mode, setMode] = useState('Start')\n  const [section, setSection] = useState({ contact, education, work, skills })\n  let body = null\n\n  const handleChange = (sectionName, name, value, index = 0, key = '') => {\n    let newSection = null\n    if (sectionName === 'contact') {\n      newSection = { ...section[sectionName] }\n      newSection[name] = value\n    } else if (sectionName === 'skills') {\n      newSection = [...section[sectionName]]\n      newSection[index] = value\n    } else {\n      newSection = [...section[sectionName]]\n      newSection[index][name] = key === 'Enter' ? formatValue(value) : value\n    }\n    setSection(prevState => ({ ...prevState, [sectionName]: newSection }))\n  }\n\n  const addItem = sectionName => {\n    let newSection = null\n    if (sectionName === 'education') {\n      newSection = section[sectionName].concat({\n        degree: '',\n        program: '',\n        university: '',\n        start: '',\n        end: ''\n      })\n    } else if (sectionName === 'work') {\n      newSection = section[sectionName].concat({\n        title: '',\n        company: '',\n        start: '',\n        end: '',\n        bullets: '\\u2022 '\n      })\n    } else {\n      newSection = section[sectionName].concat('')\n    }\n    setSection(prevState => ({ ...prevState, [sectionName]: newSection }))\n  }\n\n  const deleteItem = (sectionName, index) => {\n    const oldSection = section[sectionName]\n    const newSection = [...oldSection.slice(0, index), ...oldSection.slice(index + 1)]\n    setSection(prevState => ({ ...prevState, [sectionName]: newSection }))\n  }\n\n  const changeMode = newMode => setMode(newMode)\n\n  if (mode === 'Start') {\n    body = (\n      <div className=\"body-info\">\n        <button className=\"start-btn\" onClick={() => changeMode('Contact')}>\n          START\n        </button>\n      </div>\n    )\n  } else if (mode === 'Contact') {\n    body = (\n      <div className=\"body-info\">\n        <h1 className=\"section-title\">Contact Information</h1>\n        <ContactInfo contact={section.contact} handleChange={handleChange} changeMode={changeMode} />\n      </div>\n    )\n  } else if (mode === 'Education') {\n    body = (\n      <div className=\"body-info\">\n        <h1 className=\"section-title\">Education</h1>\n        <EducationInfo\n          education={section.education}\n          handleChange={handleChange}\n          addEducation={addItem}\n          deleteEducation={deleteItem}\n          changeMode={changeMode}\n        />\n      </div>\n    )\n  } else if (mode === 'Work') {\n    body = (\n      <div className=\"body-info\">\n        <h1 className=\"section-title\">Work Experience</h1>\n        <WorkInfo\n          work={section.work}\n          handleChange={handleChange}\n          addWork={addItem}\n          deleteWork={deleteItem}\n          changeMode={changeMode}\n        />\n      </div>\n    )\n  } else if (mode === 'Skills') {\n    body = (\n      <div className=\"body-info\">\n        <h1 className=\"section-title\">Add Skills</h1>\n        <SkillsInfo\n          skills={section.skills}\n          handleChange={handleChange}\n          addSkill={addItem}\n          deleteSkill={deleteItem}\n          changeMode={changeMode}\n        />\n      </div>\n    )\n  } else if (mode === 'Preview') {\n    body = (\n      <div className=\"preview\">\n        <PDFViewer width=\"900px\" height=\"750px\">\n          <PDF contact={section.contact} education={section.education} work={section.work} skills={section.skills} />\n        </PDFViewer>\n        <div className=\"buttons\">\n          <button className=\"button\" onClick={() => changeMode('Skills')}>\n            Skills\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return body\n}\n\nexport default Body\n","import Header from './components/Header'\nimport Body from './components/Body'\nimport './styles/App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/reset.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}